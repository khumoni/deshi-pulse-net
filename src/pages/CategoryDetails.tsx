import { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import PostCard from '@/components/PostCard';
import { categories } from '@/data/locations';
import { Post } from '@/types/firebase';
import { ArrowLeft, Plus, Filter } from 'lucide-react';

const CategoryDetails = () => {
  const { categoryId } = useParams();
  const [selectedSubcategory, setSelectedSubcategory] = useState<string>('all');
  const [posts, setPosts] = useState<Post[]>([]);

  const category = categories.find(cat => cat.id === categoryId);

  // Sample posts for this category
  useEffect(() => {
    if (category) {
      const samplePosts: Post[] = [
        {
          id: "1",
          title: category.id === 'local-services' ? "‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û ‡¶á‡¶≤‡ßá‡¶ï‡¶ü‡ßç‡¶∞‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶®" : "‡¶®‡¶§‡ßÅ‡¶® ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü",
          content: category.id === 'local-services' ? 
            "‡ßß‡ß¶ ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶á‡¶≤‡ßá‡¶ï‡¶ü‡ßç‡¶∞‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶®‡•§ ‡ß®‡ß™/‡ß≠ ‡¶∏‡ßá‡¶¨‡¶æ‡•§ ‡¶´‡ßç‡¶Ø‡¶æ‡¶®, ‡¶≤‡¶æ‡¶á‡¶ü, ‡¶è‡¶∏‡¶ø ‡¶∏‡¶¨ ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶ï‡¶æ‡¶ú‡•§" :
            "‡¶è‡¶á ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶ó‡¶∞‡¶ø‡¶§‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü‡•§ ‡¶Ü‡¶∞‡¶ì ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
          location: {
            division: "dhaka",
            district: "dhaka",
            upazila: "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø"
          },
          category: category.id,
          subcategory: category.subcategories[0]?.id || '',
          authorId: "user1",
          authorName: "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶ï‡¶∞‡¶ø‡¶Æ",
          phone: "01712345678",
          status: "approved" as const,
          createdAt: Date.now() - 2 * 60 * 60 * 1000,
          analytics: {
            views: 145,
            likes: 23,
            comments: 5
          }
        },
        {
          id: "2",
          title: category.id === 'local-services' ? "‡¶¶‡¶ï‡ßç‡¶∑ ‡¶Æ‡¶ø‡¶∏‡ßç‡¶§‡ßç‡¶∞‡¶ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá" : "‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶§‡¶•‡ßç‡¶Ø",
          content: category.id === 'local-services' ? 
            "‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶Æ‡ßá‡¶∞‡¶æ‡¶Æ‡¶§‡ßá‡¶∞ ‡¶ï‡¶æ‡¶ú‡•§ ‡¶™‡¶æ‡¶®‡¶ø‡¶∞ ‡¶™‡¶æ‡¶á‡¶™, ‡¶ü‡¶æ‡¶á‡¶≤‡¶∏, ‡¶∞‡¶Ç ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶¨‡•§" :
            "‡¶è‡¶á ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶§‡¶•‡ßç‡¶Ø‡•§ ‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶â‡¶™‡¶ï‡¶æ‡¶∞‡ßÄ‡•§",
          location: {
            division: "dhaka",
            district: "dhaka",
            upazila: "‡¶ó‡ßÅ‡¶≤‡¶∂‡¶æ‡¶®"
          },
          category: category.id,
          subcategory: category.subcategories[1]?.id || category.subcategories[0]?.id || '',
          authorId: "user2",
          authorName: "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶®",
          phone: "01812345678",
          status: "approved" as const,
          createdAt: Date.now() - 4 * 60 * 60 * 1000,
          analytics: {
            views: 98,
            likes: 15,
            comments: 3
          }
        }
      ];
      setPosts(samplePosts);
    }
  }, [category]);

  if (!category) {
    return (
      <div className="container mx-auto px-4 py-8 text-center">
        <h1 className="text-2xl font-bold mb-4">‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶ó‡¶∞‡¶ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø</h1>
        <Link to="/">
          <Button>‡¶π‡ßã‡¶Æ ‡¶™‡ßá‡¶ú‡ßá ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶®</Button>
        </Link>
      </div>
    );
  }

  const filteredPosts = selectedSubcategory === 'all' 
    ? posts 
    : posts.filter(post => post.subcategory === selectedSubcategory);

  return (
    <div className="min-h-screen bg-background">
      <div className="container mx-auto px-4 py-6">
        {/* Header */}
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-4">
            <Link to="/">
              <Button variant="ghost" size="sm">
                <ArrowLeft className="h-4 w-4 mr-2" />
                ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶®
              </Button>
            </Link>
            <div>
              <h1 className="text-3xl font-bold flex items-center gap-3">
                <span className="text-4xl">{category.icon}</span>
                {category.name}
              </h1>
              <p className="text-muted-foreground">{category.nameEn}</p>
            </div>
          </div>
          
          <Link to="/submit" state={{ categoryId: category.id }}>
            <Button>
              <Plus className="h-4 w-4 mr-2" />
              ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
            </Button>
          </Link>
        </div>

        {/* Category Overview */}
        <Card className="mb-6">
          <CardContent className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="text-center">
                <div className="text-2xl font-bold text-green-bangladesh">
                  {posts.length}
                </div>
                <div className="text-sm text-muted-foreground">‡¶Æ‡ßã‡¶ü ‡¶§‡¶•‡ßç‡¶Ø</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-600">
                  {category.subcategories.length}
                </div>
                <div className="text-sm text-muted-foreground">‡¶â‡¶™‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-purple-600">
                  {posts.reduce((sum, post) => sum + post.analytics.views, 0)}
                </div>
                <div className="text-sm text-muted-foreground">‡¶Æ‡ßã‡¶ü ‡¶≠‡¶ø‡¶â</div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Subcategory Tabs */}
        <Tabs value={selectedSubcategory} onValueChange={setSelectedSubcategory} className="mb-6">
          <TabsList className="grid w-full grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 h-auto">
            <TabsTrigger value="all" className="whitespace-nowrap">
              ‡¶∏‡¶¨ ‡¶§‡¶•‡ßç‡¶Ø ({posts.length})
            </TabsTrigger>
            {category.subcategories.map((subcategory) => {
              const count = posts.filter(post => post.subcategory === subcategory.id).length;
              return (
                <TabsTrigger 
                  key={subcategory.id} 
                  value={subcategory.id}
                  className="whitespace-nowrap"
                >
                  {subcategory.name} ({count})
                </TabsTrigger>
              );
            })}
          </TabsList>

          <TabsContent value={selectedSubcategory} className="mt-6">
            {/* Posts Grid */}
            {filteredPosts.length > 0 ? (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredPosts.map((post) => (
                  <PostCard key={post.id} post={post} onLike={() => {}} onView={() => {}} />
                ))}
              </div>
            ) : (
              <Card className="text-center py-12">
                <CardContent>
                  <div className="text-6xl mb-4">üì≠</div>
                  <h3 className="text-xl font-semibold mb-2">‡¶ï‡ßã‡¶®‡ßã ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø</h3>
                  <p className="text-muted-foreground mb-4">
                    ‡¶è‡¶á ‡¶â‡¶™‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡ßá ‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶®‡ßã ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø‡•§
                  </p>
                  <Link to="/submit" state={{ categoryId: category.id, subcategoryId: selectedSubcategory }}>
                    <Button>
                      <Plus className="h-4 w-4 mr-2" />
                      ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            )}
          </TabsContent>
        </Tabs>

        {/* Subcategory Cards */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold mb-4">‡¶â‡¶™‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡¶∏‡¶Æ‡ßÇ‡¶π</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {category.subcategories.map((subcategory) => {
              const count = posts.filter(post => post.subcategory === subcategory.id).length;
              return (
                <Card 
                  key={subcategory.id}
                  className={`cursor-pointer transition-all hover:shadow-md ${
                    selectedSubcategory === subcategory.id ? 'ring-2 ring-green-bangladesh' : ''
                  }`}
                  onClick={() => setSelectedSubcategory(subcategory.id)}
                >
                  <CardContent className="p-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="font-medium">{subcategory.name}</h3>
                        <p className="text-sm text-muted-foreground">{subcategory.nameEn}</p>
                      </div>
                      <Badge variant="secondary">{count}</Badge>
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  );
};

export default CategoryDetails;